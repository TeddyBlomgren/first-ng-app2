import{Bb as $,Cb as d,Ea as F,Eb as C,Kb as T,La as P,S as k,_a as S,aa as b,ba as _,cb as O,db as R,eb as M,gb as x,hb as w,mb as a,nb as c,qb as j,rb as h,tb as g,ub as m,za as f}from"./chunk-QCNNDH25.js";var y=(t=>(t.Easy="easy",t.Medium="medium",t.Hard="hard",t))(y||{}),v=class o{static PRESETS={easy:{rows:8,cols:8,minePercent:.12},medium:{rows:12,cols:12,minePercent:.16},hard:{rows:16,cols:16,minePercent:.2}};rows=8;cols=8;mines=10;difficulty="easy";board=[];gameOver=!1;firstClick=!0;revealedCount=0;constructor(){this.reset()}setDifficulty(i){this.difficulty=i;let e=o.PRESETS[i];this.rows=e.rows,this.cols=e.cols;let t=this.rows*this.cols,n=Math.round(t*e.minePercent);this.mines=Math.min(Math.max(1,n),t-1),this.reset()}reset(){this.board=this.generateBoard(),this.gameOver=!1,this.firstClick=!0,this.revealedCount=0}generateBoard(){let i=Array.from({length:this.rows},()=>Array.from({length:this.cols},()=>({hasMine:!1,isRevealed:!1,isFlagged:!1,adjacentMines:0}))),e=0;for(;e<this.mines;){let t=Math.floor(Math.random()*this.rows),n=Math.floor(Math.random()*this.cols);i[t][n].hasMine||(i[t][n].hasMine=!0,e++)}for(let t=0;t<this.rows;t++)for(let n=0;n<this.cols;n++)i[t][n].hasMine?i[t][n].adjacentMines=0:i[t][n].adjacentMines=this.countAdjacentMines(i,t,n);return i}countAdjacentMines(i,e,t){let n=0;for(let r=-1;r<=1;r++)for(let s=-1;s<=1;s++){if(r===0&&s===0)continue;let l=e+r,u=t+s;this.inBounds(l,u)&&i[l][u].hasMine&&n++}return n}reveal(i,e){if(this.gameOver)return;let t=this.getCell(i,e);if(!(!t||t.isRevealed||t.isFlagged)){if(this.firstClick&&t.hasMine){this.moveMineAway(i,e);for(let n=0;n<this.rows;n++)for(let r=0;r<this.cols;r++)this.board[n][r].hasMine?this.board[n][r].adjacentMines=0:this.board[n][r].adjacentMines=this.countAdjacentMines(this.board,n,r)}this.firstClick=!1,this.floodReveal(i,e),!this.gameOver&&this.checkWin()&&(this.gameOver=!0)}}toggleFlag(i,e){if(this.gameOver)return;let t=this.getCell(i,e);!t||t.isRevealed||(t.isFlagged=!t.isFlagged)}isGameOver(){return this.gameOver}floodReveal(i,e){let t=[[i,e]];for(;t.length;){let[n,r]=t.pop(),s=this.getCell(n,r);if(!(!s||s.isRevealed||s.isFlagged)){if(s.isRevealed=!0,s.hasMine){this.gameOver=!0;continue}if(this.revealedCount++,s.adjacentMines===0)for(let l=-1;l<=1;l++)for(let u=-1;u<=1;u++){if(l===0&&u===0)continue;let E=n+l,D=r+u,p=this.getCell(E,D);p&&!p.isRevealed&&!p.isFlagged&&!p.hasMine&&t.push([E,D])}}}}moveMineAway(i,e){this.board[i][e].hasMine=!1;for(let t=0;t<this.rows;t++)for(let n=0;n<this.cols;n++)if(!this.board[t][n].hasMine&&!(t===i&&n===e)){this.board[t][n].hasMine=!0;return}}checkWin(){let i=this.rows*this.cols-this.mines;return this.revealedCount>=i}inBounds(i,e){return i>=0&&i<this.rows&&e>=0&&e<this.cols}getCell(i,e){return this.inBounds(i,e)?this.board[i][e]:null}getBoard(){return this.board}getRows(){return this.rows}getCols(){return this.cols}getMines(){return this.mines}getDifficulty(){return this.difficulty}static \u0275fac=function(e){return new(e||o)};static \u0275prov=k({token:o,factory:o.\u0275fac,providedIn:"root"})};function L(o,i){if(o&1&&d(0),o&2){let e=m().$implicit;C(" ",e.hasMine?"\u{1F4A3}":e.adjacentMines||""," ")}}function V(o,i){if(o&1&&d(0),o&2){let e=m().$implicit;C(" ",e.isFlagged?"\u{1F6A9}":""," ")}}function H(o,i){if(o&1){let e=j();a(0,"button",9),g("click",function(){let n=b(e).$index,r=m().$index,s=m();return _(s.onLeftClick(r,n))})("contextmenu",function(n){let r=b(e).$index,s=m().$index,l=m();return _(l.onRightClick(n,s,r))}),O(1,L,1,1)(2,V,1,1),c()}if(o&2){let e=i.$implicit,t=i.$index,n=m().$index;$("revealed",e.isRevealed)("mine",e.isRevealed&&e.hasMine)("flagged",e.isFlagged),S("aria-label",T("Ruta ",n+1,", ",t+1)),f(),R(e.isRevealed?1:2)}}function z(o,i){if(o&1&&(a(0,"div",7),x(1,H,3,10,"button",8,M),c()),o&2){let e=i.$implicit;f(),w(e)}}var A=class o{constructor(i){this.game=i}Difficulty=y;get board(){return this.game.getBoard()}onLeftClick(i,e){this.game.reveal(i,e)}onRightClick(i,e,t){i.preventDefault(),this.game.toggleFlag(e,t)}setDifficulty(i){this.game.setDifficulty(i)}reset(){this.game.reset()}static \u0275fac=function(e){return new(e||o)(F(v))};static \u0275cmp=P({type:o,selectors:[["app-minesweeper"]],decls:18,vars:3,consts:[[1,"game"],[1,"game-title"],[1,"minesweeper-controls"],[3,"change"],[3,"value"],[3,"click"],[1,"minesweeper-board"],[1,"row"],[1,"cell",3,"revealed","mine","flagged","aria-label"],[1,"cell",3,"click","contextmenu","aria-label"]],template:function(e,t){e&1&&(a(0,"div",0)(1,"h1",1),d(2,"Minesweeper"),c(),a(3,"div",2)(4,"label"),d(5,"Sv\xE5righet: "),a(6,"select",3),g("change",function(r){return t.setDifficulty(r.target.value)}),a(7,"option",4),d(8,"Easy"),c(),a(9,"option",4),d(10,"Medium"),c(),a(11,"option",4),d(12,"Hard"),c()()(),a(13,"button",5),g("click",function(){return t.reset()}),d(14,"\u{1F504} Starta om"),c()(),a(15,"div",6),x(16,z,3,0,"div",7,M),c()()),e&2&&(f(7),h("value",t.Difficulty.Easy),f(2),h("value",t.Difficulty.Medium),f(2),h("value",t.Difficulty.Hard),f(5),w(t.board))},styles:["body[_ngcontent-%COMP%]{margin:0;font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif}.game[_ngcontent-%COMP%]{min-height:auto;display:flex;flex-direction:column;align-items:center;justify-content:center;gap:16px}.game-title[_ngcontent-%COMP%]{margin:0;font-size:2rem;font-weight:700}.minesweeper-controls[_ngcontent-%COMP%]{display:flex;gap:12px;align-items:center;justify-content:center}.minesweeper-board[_ngcontent-%COMP%]{display:block;border:2px solid #333;background:#f9f9f9;padding:12px;border-radius:8px}.row[_ngcontent-%COMP%]{display:flex}.cell[_ngcontent-%COMP%]{width:32px;height:32px;margin:2px;font-size:1.1rem;background:#e0e0e0;border:1px solid #888;border-radius:4px;cursor:pointer;outline:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;align-items:center;transition:background .1s}.cell[_ngcontent-%COMP%]:active:not(.revealed){background:#d0d0d0}.cell.revealed[_ngcontent-%COMP%]{background:#fff;border-color:#aaa}.cell.mine[_ngcontent-%COMP%]{background:#f5b5b5}.cell.flagged[_ngcontent-%COMP%]{background:#e0e0e0}"]})};export{A as Minesweeper};
